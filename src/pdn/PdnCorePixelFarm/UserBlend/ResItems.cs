using System;
using System.Collections.Generic;
namespace PaintDotNet
{
    class ResourceItems
    {
        Dictionary<string, string> resDic = new Dictionary<string, string>();
        public ResourceItems()
        {

            resDic["Application.ProductName.Bare"] = "Paint.NET";
            resDic["Application.ProductName.Format"] = "{0} v{1}{2}";
            resDic["Application.ProductName.Tag.Format"] = " {0}";
            resDic["Application.Copyright.AllRightsReserved"] = "All Rights Reserved.";
            resDic["LayerForm.Text"] = "Layers";
            resDic["LayerForm.AddNewLayerButton.ToolTipText"] = "Add New Layer";
            resDic["LayerForm.DeleteLayerButton.ToolTipText"] = "Delete Layer";
            resDic["LayerForm.MergeLayerDownButton.ToolTipText"] = "Merge Layer Down";
            resDic["LayerForm.DuplicateLayerButton.ToolTipText"] = "Duplicate Layer";
            resDic["LayerForm.MoveLayerUpButton.ToolTipText"] = "Move Layer Up";
            resDic["LayerForm.MoveLayerDownButton.ToolTipText"] = "Move Layer Down";
            resDic["LayerForm.PropertiesButton.ToolTipText"] = "Properties";
            resDic["HistoryForm.Text"] = "History";
            resDic["HistoryForm.RewindButton.ToolTipText"] = "Undo All (Rewind)";
            resDic["HistoryForm.UndoButton.ToolTipText"] = "Undo (Step Backward)";
            resDic["HistoryForm.FastForwardButton.ToolTipText"] = "Redo All (Fast Forward)";
            resDic["HistoryForm.RedoButton.ToolTipText"] = "Redo (Step Forward)";
            resDic["SavePaletteDialog.TypeANameLabel.Text"] = "Type a name for the palette:";
            resDic["SavePaletteDialog.PalettesLabel.Text"] = "Palettes that have already been saved:";
            resDic["SavePaletteDialog.Text"] = "Save Current Palette";
            resDic["ColorsForm.Text"] = "Colors";
            resDic["ColorsForm.ColorAddButton.ToolTipText"] = "Add color to palette";
            resDic["ColorsForm.ColorDeleteButton.ToolTipText"] = "Delete color from palette";
            resDic["ColorPalette.SaveHeader"] = @"; Paint.NET Palette File
; Lines that start with a semicolon are comments
; Colors are written as 8-digit hexadecimal numbers: aarrggbb
; For example, this would specify green: FF00FF00
; The alpha ('aa') value specifies how transparent a color is. FF is fully opaque, 00 is fully transparent.
; A palette must consist of ninety six (96) colors. If there are less than this, the remaining color
; slots will be set to white (FFFFFFFF). If there are more, then the remaining colors will be ignored.";
            resDic["SystemLayer.UserDataDirName"] = "Paint.NET User Files";
            resDic["ColorPalettes.UserDataSubDirName"] = "Palettes";
            resDic["ColorsForm.ColorPalettesButton.ToolTipText"] = "Manage color palettes";
            resDic["ColorsForm.ColorPalettesButton.SaveCurrentPaletteAs.Text"] = "Save Current Palette &As...";
            resDic["ColorsForm.ColorPalettesButton.OpenPalettesFolder.Text"] = "&Open Palettes Folder...";
            resDic["ColorsForm.ColorPalettesButton.ResetToDefaultPalette.Text"] = "&Reset to Default Palette";
            resDic["ColorsForm.RedLabel.Text"] = "R:";
            resDic["ColorsForm.BlueLabel.Text"] = "B:";
            resDic["ColorsForm.GreenLabel.Text"] = "G:";
            resDic["ColorsForm.HexLabel.Text"] = "Hex:";
            resDic["ColorsForm.HueLabel.Text"] = "H:";
            resDic["ColorsForm.SaturationLabel.Text"] = "S:";
            resDic["ColorsForm.ValueLabel.Text"] = "V:";
            resDic["ColorsForm.RgbHeader.Text"] = "RGB";
            resDic["ColorsForm.HsvHeader.Text"] = "HSV";
            resDic["ColorsForm.AlphaHeader.Text"] = "Transparency - Alpha";
            resDic["ColorsForm.MoreLessButton.Text.Less"] = "Less";
            resDic["ColorsForm.MoreLessButton.Text.More"] = "More";
            resDic["WhichUserColor.Primary"] = "Primary";
            resDic["WhichUserColor.Secondary"] = "Secondary";
            resDic["MainToolBarForm.Text"] = "Tools";
            resDic["AboutDialog.Text.Format"] = "About {0}";
            resDic["Form.OkButton.Text"] = "OK";
            resDic["Form.CancelButton.Text"] = "Cancel";
            resDic["Form.SaveButton.Text"] = "&Save";
            resDic["Form.ResetButton.Text"] = "&Reset";
            resDic["Form.CloseButton.Text"] = "Close";
            resDic["AboutDialog.CreditsLabel.Text"] = "Credits:";
            resDic["BrushConfigWidget.SolidBrush.Text"] = "Solid Color";
            resDic["HatchStyle.Horizontal"] = "Horizontal";
            resDic["HatchStyle.Min"] = "Min";
            resDic["HatchStyle.Vertical"] = "Vertical";
            resDic["HatchStyle.ForwardDiagonal"] = "Forward Diagonal";
            resDic["HatchStyle.BackwardDiagonal"] = "Backward Diagonal";
            resDic["HatchStyle.Cross"] = "Cross";
            resDic["HatchStyle.LargeGrid"] = "Large Grid";
            resDic["HatchStyle.Max"] = "Max";
            resDic["HatchStyle.DiagonalCross"] = "Diagonal Cross";
            resDic["HatchStyle.Percent05"] = "Percent 05";
            resDic["HatchStyle.Percent10"] = "Percent 10";
            resDic["HatchStyle.Percent20"] = "Percent 20";
            resDic["HatchStyle.Percent25"] = "Percent 25";
            resDic["HatchStyle.Percent30"] = "Percent 30";
            resDic["HatchStyle.Percent40"] = "Percent 40";
            resDic["HatchStyle.Percent50"] = "Percent 50";
            resDic["HatchStyle.Percent60"] = "Percent 60";
            resDic["HatchStyle.Percent70"] = "Percent 70";
            resDic["HatchStyle.Percent75"] = "Percent 75";
            resDic["HatchStyle.Percent80"] = "Percent 80";
            resDic["HatchStyle.Percent90"] = "Percent 90";
            resDic["HatchStyle.LightDownwardDiagonal"] = "Light Downward Diagonal";
            resDic["HatchStyle.LightUpwardDiagonal"] = "Light Upward Diagonal";
            resDic["HatchStyle.DarkDownwardDiagonal"] = "Dark Downward Diagonal";
            resDic["HatchStyle.DarkUpwardDiagonal"] = "Dark Upward Diagonal";
            resDic["HatchStyle.WideDownwardDiagonal"] = "Wide Downward Diagonal";
            resDic["HatchStyle.WideUpwardDiagonal"] = "Wide Upward Diagonal";
            resDic["HatchStyle.LightVertical"] = "Light Vertical";
            resDic["HatchStyle.LightHorizontal"] = "Light Horizontal";
            resDic["HatchStyle.NarrowVertical"] = "Narrow Vertical";
            resDic["HatchStyle.NarrowHorizontal"] = "Narrow Horizontal";
            resDic["HatchStyle.DarkVertical"] = "Dark Vertical";
            resDic["HatchStyle.DarkHorizontal"] = "Dark Horizontal";
            resDic["HatchStyle.DashedDownwardDiagonal"] = "Dashed Downward Diagonal";
            resDic["HatchStyle.DashedUpwardDiagonal"] = "Dashed Upward Diagonal";
            resDic["HatchStyle.DashedHorizontal"] = "Dashed Horizontal";
            resDic["HatchStyle.DashedVertical"] = "Dashed Vertical";
            resDic["HatchStyle.SmallConfetti"] = "Small Confetti";
            resDic["HatchStyle.LargeConfetti"] = "Large Confetti";
            resDic["HatchStyle.ZigZag"] = "Zig Zag";
            resDic["HatchStyle.Wave"] = "Wave";
            resDic["HatchStyle.DiagonalBrick"] = "Diagonal Brick";
            resDic["HatchStyle.HorizontalBrick"] = "Horizontal Brick";
            resDic["HatchStyle.Weave"] = "Weave";
            resDic["HatchStyle.Plaid"] = "Plaid";
            resDic["HatchStyle.Divot"] = "Divot";
            resDic["HatchStyle.DottedGrid"] = "Dotted Grid";
            resDic["HatchStyle.DottedDiamond"] = "Dotted Diamond";
            resDic["HatchStyle.Shingle"] = "Shingle";
            resDic["HatchStyle.Trellis"] = "Trellis";
            resDic["HatchStyle.Sphere"] = "Sphere";
            resDic["HatchStyle.SmallGrid"] = "Small Grid";
            resDic["HatchStyle.SmallCheckerBoard"] = "Small Checker Board";
            resDic["HatchStyle.LargeCheckerBoard"] = "Large Checker Board";
            resDic["HatchStyle.OutlinedDiamond"] = "Outlined Diamond";
            resDic["HatchStyle.SolidDiamond"] = "Solid Diamond";
            resDic["BrushConfigWidget.FillStyleLabel.Text"] = "Fill:";
            resDic["CanvasSizeAction.Name"] = "Canvas Size";
            resDic["CanvasSizeAction.ResizeDocument.OutOfMemory"] = "Not enough memory to resize the canvas.";
            resDic["AnchorEdge.TopLeft"] = "Top Left";
            resDic["AnchorEdge.Top"] = "Top";
            resDic["AnchorEdge.TopRight"] = "Top Right";
            resDic["AnchorEdge.Left"] = "Left";
            resDic["AnchorEdge.Middle"] = "Middle";
            resDic["AnchorEdge.Right"] = "Right";
            resDic["AnchorEdge.BottomLeft"] = "Bottom Left";
            resDic["AnchorEdge.Bottom"] = "Bottom";
            resDic["AnchorEdge.BottomRight"] = "Bottom Right";
            resDic["CanvasSizeDialog.Text"] = "Canvas Size";
            resDic["CanvasSizeDialog.AnchorHeader.Text"] = "Anchor";
            resDic["CanvasSizeDialog.NewSpaceLabel.Text"] = "The new space will be filled with the secondary color.";
            resDic["CloneStampTool.Name"] = "Clone Stamp";
            resDic["CloneStampTool.HelpText"] = "Hold Ctrl and left click to select an origin. Afterwards, left click and draw to copy";
            resDic["ColorDisplayWidget.SwapIconBox.ToolTipText"] = @"Swap colors
Shortcut key: X";
            resDic["ColorDisplayWidget.BlackAndWhiteIconBox.ToolTipText"] = "Black and White";
            resDic["ColorDisplayWidget.ForeColorRectangle.ToolTipText"] = "Primary";
            resDic["ColorDisplayWidget.BackColorRectangle.ToolTipText"] = "Secondary";
            resDic["ColorPickerTool.Name"] = "Color Picker";
            resDic["ColorPickerTool.HelpText"] = "Left click to set primary color, right click to set secondary color";
            resDic["CommonAction.New"] = "New";
            resDic["CommonAction.Open"] = "Open";
            resDic["CommonAction.Save"] = "Save";
            resDic["CommonAction.Print"] = "Print";
            resDic["CommonAction.Cut"] = "Cut";
            resDic["CommonAction.Copy"] = "Copy";
            resDic["CommonAction.Paste"] = "Paste";
            resDic["CommonAction.CropToSelection"] = "Crop to Selection";
            resDic["CommonAction.Deselect"] = "Deselect";
            resDic["CommonAction.Undo"] = "Undo";
            resDic["CommonAction.Redo"] = "Redo";
            resDic["CommonAction.ZoomIn"] = "Zoom In";
            resDic["CommonAction.ZoomOut"] = "Zoom Out";
            resDic["CropAction.Name"] = "Crop to Selection";
            resDic["DeselectAction.Name"] = "Deselect";
            resDic["ExecuteFunction.ProgressDialog.Description.Text"] = "Please wait...";
            resDic["LayerPropertyChanging.HistoryMementoNameFormat"] = "Layer {0}";
            resDic["DocumentWorkspace.InitializeEffects.DllLoadFailed.Format"] = "There was an error loading {0}. It may be corrupt, or it may need to be recompiled.";
            resDic["Generic.OutOfMemory"] = "There was not enough memory to complete the operation.";
            resDic["AddNewBlankLayer.HistoryMementoName"] = "New Layer";
            resDic["AddNewBlankLayer.LayerName.Format"] = "Layer {0}";
            resDic["DocumentWorkspace.DeleteLayerButtonClicked.MustHaveOneLayer"] = "There must be at least one layer in an image.";
            resDic["DocumentWorkspace.DeleteLayerButtonClicked.Confirmation"] = "Delete layer?";
            resDic["DeleteLayer.HistoryMementoName"] = "Delete Layer";
            resDic["DuplicateLayer.HistoryMementoName"] = "Duplicate Layer";
            resDic["MergeLayerDown.HistoryMementoName"] = "Merge Layer Down";
            resDic["MoveLayerUp.HistoryMementoName"] = "Move Layer Up";
            resDic["MoveLayerDown.HistoryMementoName"] = "Move Layer Down";
            resDic["ClearHistory.Confirmation"] = "Clear history?";
            resDic["ClearHistory.HistoryMementoName"] = "Clear History";
            resDic["EllipseSelectTool.Name"] = "Ellipse Select";
            resDic["EllipseSelectTool.HelpText"] = "Click and drag to draw an elliptical selection. Hold shift to constrain to a circle.";
            resDic["EllipseTool.Name"] = "Ellipse";
            resDic["EllipseTool.HelpText"] = "Click and drag to draw an ellipse (right click for secondary color). Hold shift to constrain to a circle.";
            resDic["EllipseTool.StatusText.Format"] = "Size: {0}{1} x {2}{3}, Area: {4} {5}";
            resDic["EraserTool.Name"] = "Eraser";
            resDic["EraserTool.HelpText"] = "Click and drag to erase a portion of the image";
            resDic["EraseSelectionAction.Name"] = "Erase Selection";
            resDic["FillSelectionAction.Name"] = "Fill Selection";
            resDic["FlattenFunction.Name"] = "Flatten";
            resDic["FlipDocumentHorizontalAction.Name"] = "Flip Horizontal (all)";
            resDic["FlipDocumentVerticalAction.Name"] = "Flip Vertical (all)";
            resDic["FlipLayerHorizontalAction.Name"] = "Flip Horizontal";
            resDic["FlipLayerVerticalAction.Name"] = "Flip Vertical";
            resDic["FreeformShapeTool.Name"] = "Freeform Shape";
            resDic["FreeformShapeTool.HelpText"] = "Left click to draw a freeform shape with the primary color, right click to use the secondary color";
            resDic["ImportFromFileAction.Name"] = "Import From File";
            resDic["ImportFromFileAction.AskForCanvasResize.OutOfMemory"] = "Ran out of memory while trying to resize the image.";
            resDic["ImportFromFileAction.ImportOneLayer.OutOfMemory"] = "Ran out of memory while trying to resize the layer.";
            resDic["ImportFromFileAction.ImportOneFile.NewLayer.Format"] = "{0}: {1}";
            resDic["InvertSelectionAction.Name"] = "Invert Selection";
            resDic["LassoSelectTool.Name"] = "Lasso Select";
            resDic["LassoSelectTool.HelpText"] = "Click and drag to draw the outline for a selection area.";
            resDic["GradientTool.Name"] = "Gradient";
            resDic["GradientTool.HelpText"] = "Click and drag to start drawing. Holding shift constrains the angle. Right mouse button reverses colors.";
            resDic["GradientTool.HelpText.WhileAdjusting.Format"] = "Offset: {0}{1} x {2}{3}, Length: {4} {5}, Angle: {6}°. Holding other mouse button will move both nubs.";
            resDic["GradientTool.HelpText.Adjustable"] = "Drag a nub to adjust the gradient. Right click nub to swap colors. Press Enter to finish, or Esc to undo.";
            resDic["LineTool.Name"] = "Line / Curve";
            resDic["LineTool.HelpText"] = "Left click to draw with primary color, right click to use secondary color";
            resDic["LineTool.StatusText.Format"] = "Offset: {0}{1} x {2}{3}, Length: {4} {5}, Angle: {6}°";
            resDic["LineTool.PreCurveHelpText"] = "Drag nubs to curve line (right button for Bezier), or press Enter to finish line, or draw elsewhere for a new line.";
            resDic["LineTool.CurvingHelpText"] = "Press Enter to finish the curve, or draw elsewhere for a new line. Tap Ctrl to toggle nubs.";
            resDic["MagicWandTool.Name"] = "Magic Wand";
            resDic["MagicWandTool.HelpText"] = "Click to select an area of similar color.";
            resDic["MoveTool.Name"] = "Move Selected Pixels";
            resDic["MoveTool.HelpText"] = "Drag the selection to move. Drag the nubs to scale. Drag with right mouse button to rotate.";
            resDic["MoveTool.HistoryMemento.Translate"] = "Move Pixels";
            resDic["MoveTool.HistoryMemento.Scale"] = "Scale Pixels";
            resDic["MoveTool.HistoryMemento.Rotate"] = "Rotate Pixels";
            resDic["MoveTool.HistoryMemento.DropPixels"] = "Finish Pixels";
            resDic["MoveSelectionTool.Name"] = "Move Selection";
            resDic["MoveSelectionTool.HelpText"] = "Drag the selection to move. Drag the nubs to scale. Drag with right mouse button to rotate.";
            resDic["MoveSelectionTool.HistoryMemento.Translate"] = "Move Selection";
            resDic["MoveSelectionTool.HistoryMemento.Scale"] = "Scale Selection";
            resDic["MoveSelectionTool.HistoryMemento.Rotate"] = "Rotate Selection";
            resDic["MoveSelectionTool.HistoryMemento.DropSelection"] = "Finish Selection";
            resDic["NewFileDialog.Text"] = "New";
            resDic["PaintBrushTool.Name"] = "Paintbrush";
            resDic["PaintBrushTool.HelpText"] = "Left click to draw with primary color, right click to draw with secondary color";
            resDic["PaintBucketTool.Name"] = "Paint Bucket";
            resDic["PaintBucketTool.HelpText"] = "Left click to fill a region with the primary color, right click to fill with the secondary color";
            resDic["PanTool.Name"] = "Pan";
            resDic["PanTool.HelpText"] = "When zoomed in close, click and drag to navigate the image";
            resDic["PdnInfo.AboutRedirectPage"] = "pdnabout.html";
            resDic["PdnInfo.FullAppName.Format"] = "{0} ({1})";
            resDic["PdnInfo.VersionString.Format"] = "{0} {1} build {2}";
            resDic["ProcessorArchitecture.X86"] = "x86";
            resDic["ProcessorArchitecture.X64"] = "x64";
            resDic["PdnInfo.FriendlyVersionString.ConfigWithSpace.Format"] = " {0}";
            resDic["PdnInfo.FriendlyVersionString.Format"] = "version {0}{1}";
            resDic["PencilTool.Name"] = "Pencil";
            resDic["PencilTool.HelpText"] = "Left click to draw freeform, one-pixel wide lines with the primary color, right click to use the secondary color";
            resDic["PenConfigWidget.BrushWidthLabel"] = "Brush width:";
            resDic["PenConfigWidget.Error.InvalidNumber"] = "Invalid number";
            resDic["PenConfigWidget.Error.TooSmall"] = "Size is smaller than 1";
            resDic["PenConfigWidget.Error.TooSmall.Format"] = "Size is smaller than {0}";
            resDic["PenConfigWidget.Error.TooLarge"] = "Size is larger than 500";
            resDic["PenConfigWidget.Error.TooLarge.Format"] = "Size is larger than {0}";
            resDic["ProgressDialog.PercentText.Text.Format"] = "{0}%";
            resDic["RecolorTool.Name"] = "Recolor";
            resDic["RecolorTool.HelpText"] = "Left click to replace the secondary color with the primary color.";
            resDic["SelectionTool.MoveSelection"] = "Move Selection";
            resDic["SelectionTool.RotateSelection"] = "Rotate Selection";
            resDic["SelectionTool.ScaleSelection"] = "Scale Selection";
            resDic["RectangleSelectTool.Name"] = "Rectangle Select";
            resDic["RectangleSelectTool.HelpText"] = "Click and drag to draw a rectangular selection. Hold shift to constrain to a square.";
            resDic["RectangleTool.Name"] = "Rectangle";
            resDic["RectangleTool.HelpText"] = "Click and drag to draw a rectangle (right click for secondary color). Hold shift to constrain to a square.";
            resDic["RectangleTool.StatusText.Format"] = "Size: {0}{1} x {2}{3}, area: {4} {5}";
            resDic["ResizeAction.Name"] = "Resize";
            resDic["ResizeAction.PerformAction.UnspecifiedError"] = "There was an unspecified error while trying to resize the image.";
            resDic["ResizeAction.PerformAction.OutOfMemory"] = "Not enough memory to resize the image.";
            resDic["ResizeDialog.ResizedImageHeader.Text.Format"] = "New size: {0}";
            resDic["ResizeDialog.ResampleMethod.NearestNeighbor"] = "Nearest Neighbor";
            resDic["ResizeDialog.ResampleMethod.Bicubic"] = "Bicubic";
            resDic["ResizeDialog.ResampleMethod.SuperSampling"] = "Best Quality";
            resDic["ResizeDialog.ResampleMethod.Bilinear"] = "Bilinear";
            resDic["ResizeDialog.Text"] = "Resize";
            resDic["ResizeDialog.AsteriskLabel.Text"] = "*";
            resDic["ResizeDialog.PercentSignLabel.Text"] = "%";
            resDic["ResizeDialog.PixelsLabel1.Text"] = "pixels";
            resDic["ResizeDialog.PixelsLabel2.Text"] = "pixels";
            resDic["ResizeDialog.PercentRB.Text"] = "&By percentage:";
            resDic["ResizeDialog.AbsoluteRB.Text"] = "&By absolute size:";
            resDic["ResizeDialog.PixelSizeHeader.Text"] = "Pixel size";
            resDic["ResizeDialog.PrintSizeHeader.Text"] = "Print size";
            resDic["ResizeDialog.CurrentImageSizeLabel.Text"] = "Current image size:";
            resDic["ResizeDialog.ResamplingLabel.Text"] = "Resampling:";
            resDic["ResizeDialog.NewWidthLabel1.Text"] = "Width:";
            resDic["ResizeDialog.NewHeightLabel1.Text"] = "Height:";
            resDic["ResizeDialog.NewWidthLabel2.Text"] = "Width:";
            resDic["ResizeDialog.NewHeightLabel2.Text"] = "Height:";
            resDic["ResizeDialog.ConstrainCheckBox.Text"] = "&Maintain aspect ratio";
            resDic["ResizeDialog.AsteriskTextLabel.SuperSampling"] = "* Super Sampling will be used";
            resDic["ResizeDialog.AsteriskTextLabel.Bicubic"] = "* Bicubic will be used";
            resDic["RotateAction.180"] = "180°";
            resDic["RotateAction.90CW"] = "90° CW";
            resDic["RotateAction.90CCW"] = "90° CCW";
            resDic["RotateAction.HistoryMementoName.Format"] = "{0} {1}";
            resDic["RotateAction.Name"] = "Rotate";
            resDic["RoundedRectangleTool.Name"] = "Rounded Rectangle";
            resDic["RoundedRectangleTool.HelpText"] = "Click and drag to draw a rounded rectangle (right click for secondary color). Hold shift to constrain.";
            resDic["RoundedRectangleTool.StatusText.Format"] = "Bounding rectangle size: {0}{1} x {2}{3}, area: {4} {5}";
            resDic["SaveConfigDialog.Text"] = "Save Configuration";
            resDic["SaveConfigDialog.SettingsHeader.Text"] = "Settings";
            resDic["SaveConfigDialog.DefaultsButton.Text"] = "De&faults";
            resDic["SaveConfigDialog.PreviewHeader.Text.Format"] = "Preview, file size: {0}";
            resDic["SaveConfigDialog.FileSizeText.Text.Computing"] = "(computing)";
            resDic["SaveConfigDialog.FileSizeText.Text.Error"] = "(error)";
            resDic["SaveConfigDialog.FileSizeText.Text.Computing.Format"] = "(computing: {0}%)";
            resDic["SaveProgressDialog.Title"] = "Saving";
            resDic["SaveProgressDialog.Description"] = "Saving:";
            resDic["SelectAllAction.Name"] = "Select All";
            resDic["ShapeDrawTypeConfigWidget.OutlineButton.ToolTipText"] = "Draw Shape Outline";
            resDic["ShapeDrawTypeConfigWidget.InteriorButton.ToolTipText"] = "Draw Filled Shape";
            resDic["ShapeDrawTypeConfigWidget.BothButton.ToolTipText"] = "Draw Filled Shape With Outline";
            resDic["SplashForm.StatusLabel.Text"] = "Starting...";
            resDic["Startup.UnhandledError.Format"] = "There was an unhandled error, and Paint.NET must be closed. Refer to the file '{0}', which has been placed on your desktop, for more information.";
            resDic["ToolConfigStrip.ResamplingLabel.Text"] = "Quality:";
            resDic["ResamplingAlgorithm.Bilinear"] = "Smooth";
            resDic["ResamplingAlgorithm.NearestNeighbor"] = "Pixelated";
            resDic["ResamplingAlgorithm.Bicubic"] = "Bicubic";
            resDic["ResamplingAlgorithm.SuperSampling"] = "Super Sampling";
            resDic["ToolConfigStrip.ColorPickerLabel.Text"] = "After click:";
            resDic["ColorPickerClickBehavior.NoToolSwitch"] = "Do not switch tool";
            resDic["ColorPickerClickBehavior.SwitchToLastTool"] = "Switch to previous tool";
            resDic["ColorPickerClickBehavior.SwitchToPencilTool"] = "Switch to Pencil tool";
            resDic["TextConfigWidget.Error.InvalidNumber"] = "Invalid number";
            resDic["TextConfigWidget.Error.TooSmall.Format"] = "Size is smaller than {0}";
            resDic["TextConfigWidget.Error.TooLarge.Format"] = "Size is larger than {0}";
            resDic["TextConfigWidget.FontLabel.Text"] = "Font:";
            resDic["TextConfigWidget.BoldButton.ToolTipText"] = "Bold";
            resDic["TextConfigWidget.ItalicButton.ToolTipText"] = "Italics";
            resDic["TextConfigWidget.UnderlineButton.ToolTipText"] = "Underline";
            resDic["TextConfigWidget.AlignLeftButton.ToolTipText"] = "Align Left";
            resDic["TextConfigWidget.AlignCenterButton.ToolTipText"] = "Center Align";
            resDic["TextConfigWidget.AlignRightButton.ToolTipText"] = "Align Right";
            resDic["TextTool.Name"] = "Text";
            resDic["TextTool.HelpText"] = "Left click to place the text cursor, and then type to enter text. Text is drawn with the primary color.";
            resDic["TextTool.StatusText.StartTyping"] = "Drag the nub to move the text. Hold Ctrl to hide nub and cursor. Tap Ctrl to toggle nub.";
            resDic["TextTool.StatusText.TextInfo.Format"] = "Anchor point: {0}{1}, {2}{3}";
            resDic["ToleranceSliderControl.Tolerance"] = "Tolerance";
            resDic["ToleranceSliderControl.Percentage.Format"] = "{0}%";
            resDic["WorkspaceOptionsConfigWidget.DrawGridToggleButton.ToolTipText"] = "Display grid when zoomed in";
            resDic["WorkspaceOptionsConfigWidget.RulersToggleButton.ToolTipText"] = "Rulers";
            resDic["ZoomTool.Name"] = "Zoom";
            resDic["ZoomTool.HelpText"] = "Left click to zoom in, right click to zoom out, middle click to slide";
            resDic["ZoomConfigWidget.ZoomInButton.ToolTipText"] = "Zoom in";
            resDic["ZoomConfigWidget.ZoomOutButton.ToolTipText"] = "Zoom out";
            resDic["ZoomBasis.FitToWindow"] = "Window";
            resDic["ZoomBasis.Selection"] = "Selection";
            resDic["ZoomBasis.ScaleFactor"] = "Factor";
            resDic["ZoomConfigWidget.Error.InvalidNumber"] = "Invalid number";
            resDic["ZoomConfigWidget.Error.TooSmall"] = "Zoom has to be at least 1%";
            resDic["ZoomConfigWidget.Error.TooLarge"] = "Zoom cannot exceed 3200%";
            resDic["ZoomConfigWidget.Percentage.Format"] = "{0}%";
            resDic["StatusBar.Context.Help.Text.Format"] = "{0}: {1}";
            resDic["AcquireImageAction.Name"] = "Acquire Image";
            resDic["PasteInToNewImageAction.Error.NoClipboardImage"] = "There is no usable image in the clipboard.";
            resDic["AcquireImageAction.Error.Clipboard.TransferError"] = "There was an error transferring the image from the clipboard.";
            resDic["AcquireImageAction.Error.Clipboard.OutOfMemory"] = "There is not enough memory to copy the image from the clipboard.";
            resDic["StatusBar.Size.Format"] = "{0}{1} x {2}{3}";
            resDic["Untitled.FriendlyName"] = "Untitled";
            resDic["MainForm.Title.Format.Normal"] = "{0} ({1}) - {2}";
            resDic["MainForm.Title.Format.Minimized"] = "{0} - {1}";
            resDic["NewImageAction.Error.OutOfMemory"] = "Not enough memory to create new image.";
            resDic["NewImageAction.Name"] = "New Image";
            resDic["LoadImage.Error.ImageTypeNotRecognized"] = "The image type is not recognized, and cannot be opened.";
            resDic["LoadImage.Error.InvalidFileName.Format"] = @"The file name is invalid.
""{0}""";
            resDic["LoadImage.Error.BlankFileName"] = "The filename is blank.";
            resDic["LoadImage.Error.ArgumentException"] = "There was an error opening the file.";
            resDic["LoadImage.Error.UnauthorizedAccessException"] = "Access was denied to the requested file (unauthorized access).";
            resDic["LoadImage.Error.SecurityException"] = "Access was denied to the requested file (security exception).";
            resDic["LoadImage.Error.FileNotFoundException"] = "The file could not be found.";
            resDic["LoadImage.Error.DirectoryNotFoundException"] = "The directory could not be found.";
            resDic["LoadImage.Error.PathTooLongException"] = "The file name is too long.";
            resDic["LoadImage.Error.IOException"] = "There was an error reading the file from the media.";
            resDic["LoadImage.Error.SerializationException"] = "The file is corrupt or was saved with a newer version of Paint.NET.";
            resDic["LoadImage.Error.OutOfMemoryException"] = "Not enough memory to load the image.";
            resDic["LoadImage.Error.Exception"] = "There was an unspecified error while opening the file.";
            resDic["OpenImageAction.Name"] = "Open Image";
            resDic["SavedWithOlderVersion.Format"] = @"This image was saved with an older version of Paint.NET. If you save it, it will not be readable by that older version.

Saved with: Paint.NET v{0}
Current version: Paint.NET v{1}";
            resDic["FileDialog.PathTooLongException.Message"] = "The file name is too long. Please try a shorter name.";
            resDic["FileDialog.Types.AllImages"] = "All image types";
            resDic["SaveAsDialog.Title"] = "Save As";
            resDic["SaveImage.Error.UnauthorizedAccessException"] = "Access is denied. Use File->Save As... to save under a different location or name.";
            resDic["SaveImage.Error.SecurityException"] = "Access is denied. Use File->Save As... to save under a different location or name.";
            resDic["SaveImage.Error.DirectoryNotFoundException"] = "The directory could not be found. Use File->Save As... to save to another location.";
            resDic["SaveImage.Error.IOException"] = "An I/O error occurred when writing to the file.";
            resDic["SaveImage.Error.OutOfMemoryException"] = "Not enough memory to save the image.";
            resDic["SaveImage.Error.Exception"] = "There was an unspecified error while saving the file.";
            resDic["WarnAboutFlattening.Title"] = "Save";
            resDic["WarnAboutFlattening.IntroText"] = @"Saving in this file format requires that the image is first ""flattened"", which reduces it to a single layer.";
            resDic["WarnAboutFlattening.FlattenTB.ActionText"] = "&Flatten";
            resDic["WarnAboutFlattening.FlattenTB.ExplanationText"] = "The image will be flattened, and then saved. You will be able to undo the flatten operation after saving is finished.";
            resDic["WarnAboutFlattening.CancelTB.ActionText"] = "Cancel";
            resDic["WarnAboutFlattening.CancelTB.ExplanationText"] = "Cancels the save action.";
            resDic["CopyAction.Error.TransferToClipboard"] = "There was an error copying the image to the clipboard.";
            resDic["CopyAction.Error.OutOfMemory"] = "There was not enough memory to complete the clipboard operation.";
            resDic["CopyAction.Error.Generic"] = "There was an error copying to the clipboard.";
            resDic["CutAction.Name"] = "Cut";
            resDic["Effects.ApplyingDialog.Description"] = "Rendering...";
            resDic["Effects.RepeatMenuItem.Format"] = "Repeat {0}";
            resDic["Effects.PluginLoadErrorsDialog.Text"] = "Plugin Load Errors";
            resDic["Effects.PluginLoadErrorsDialog.Message.Text"] = "The following plugins failed to load. They may have been written for an older or newer version of Paint.NET. If you already have the most up-to-date version of Paint.NET, then you should check to see if there is an updated version of any plugin causing an error.";
            resDic["EffectErrorMessage.InfoNotSupplied"] = "(Not Supplied)";
            resDic["EffectErrorMessage.HeaderFormat"] = @"{0} of {1}
--------------";
            resDic["EffectErrorMessage.ShortFormat"] = @"File: {0}
      Effect Name: {1}
      Full error message: {2}
";
            resDic["EffectErrorMessage.FullFormat"] = @"File: {0}
      Name: {1}
      Version: {2}
      Author: {3}
      Copyright: {4}
      Website: {5}
      Full error message: {6}
";
            resDic["Effects.Name.Format.Configurable"] = "{0}...";
            resDic["PasteAction.Error.TransferFromClipboard"] = "There was an error getting the image from the clipboard.";
            resDic["PasteAction.Error.OutOfMemory"] = "Not enough memory to paste from the clipboard.";
            resDic["PasteAction.Error.NotRecognized"] = "The image in the clipboard couldn't be recognized. Try re-copying it with the original application that was used to acquire it.";
            resDic["PasteAction.Error.NoImage"] = "The clipboard doesn't contain an image.";
            resDic["PasteAction.Question.ExpandCanvas"] = @"The image being pasted is larger than the image canvas.
Expand canvas to fit pasted image?";
            resDic["NewLayerAction.Error.OutOfMemory"] = "Not enough memory to create a new layer.";
            resDic["FlattenAction.Question.DiscardHiddenLayers"] = "Discard hidden layers?";
            resDic["StatusBar.Progress.Percentage.Format"] = "{0}%";
            resDic["StatusBar.Context.SelectedArea.Text.Format"] = "Selection top left: {0}{1}, {2}{3}. Bounding rectangle size: {4}{5} x {6}{7}. Area: {8} {9} square";
            resDic["StatusBar.Context.SelectedArea.Text.WithAngle.Format"] = "Selection top left: {0}{1}, {2}{3}. Bounding rectangle size: {4}{5} x {6}{7}. Area: {8} {9} square. Angle: {10}°";
            resDic["WIA.Error.EnableMe"] = "To use this feature you must enable the Windows Image Acquisition system service.";
            resDic["WIA.Error.UnableToLoad"] = @"The Windows Image Acquisition (WIA) library, ""wiaaut.dll"" is unavailable. Please read the Help file (Help menu -> Help Topics), in the Frequently Asked Questions topic, for troubleshooting information.";
            resDic["DragDrop.OpenOrImport.Title"] = "Drag and Drop";
            resDic["DragDrop.OpenOrImport.InfoText"] = "What would you like to do with the file(s)?";
            resDic["DragDrop.OpenOrImport.OpenButton.ActionText"] = "&Open";
            resDic["DragDrop.OpenOrImport.OpenButton.ExplanationText"] = "Open the file(s) into tab(s).";
            resDic["DragDrop.OpenOrImport.ImportLayers.ActionText"] = "&Add into layer(s)";
            resDic["DragDrop.OpenOrImport.ImportLayers.ExplanationText"] = "Load and then add into new layer(s) in the current image.";
            resDic["DragDrop.OpenOrImport.ImportLayers.ExplanationText.NoImagesYet"] = "Import into new layer(s) in a new image.";
            resDic["Menu.File.OpenRecent.None"] = "(none)";
            resDic["Menu.File.OpenRecent.ClearThisList"] = "&Clear this list";
            resDic["Menu.File.ViewPluginLoadErrors.Text"] = "&View Plugin Load Errors...";
            resDic["Menu.File.Text"] = "&File";
            resDic["Menu.File.New.Text"] = "&New...";
            resDic["Menu.File.Open.Text"] = "&Open...";
            resDic["Menu.File.OpenRecent.Text"] = "Open &Recent";
            resDic["Menu.File.Close.Text"] = "&Close";
            resDic["Menu.File.Acquire.Text"] = "Ac&quire";
            resDic["Menu.File.Acquire.FromScannerOrCamera.Text"] = "From &Scanner or Camera...";
            resDic["Menu.File.Save.Text"] = "&Save";
            resDic["Menu.File.SaveAs.Text"] = "Save &As...";
            resDic["Menu.File.Print.Text"] = "&Print...";
            resDic["Menu.File.Exit.Text"] = "E&xit";
            resDic["Menu.Edit.Text"] = "&Edit";
            resDic["Menu.Edit.Undo.Text"] = "&Undo";
            resDic["Menu.Edit.Redo.Text"] = "&Redo";
            resDic["Menu.Edit.Cut.Text"] = "Cu&t";
            resDic["Menu.Edit.Copy.Text"] = "&Copy";
            resDic["Menu.Edit.Paste.Text"] = "&Paste";
            resDic["Menu.Edit.PasteInToNewLayer.Text"] = "Paste in to New &Layer";
            resDic["Menu.Edit.PasteInToNewImage.Text"] = "Paste in to New I&mage";
            resDic["Menu.Edit.EraseSelection.Text"] = "&Erase Selection";
            resDic["Menu.Edit.FillSelection.Text"] = "&Fill Selection";
            resDic["Menu.Edit.FillSelection.ShortcutKeysDisplayString"] = "Backspace";
            resDic["Menu.Edit.InvertSelection.Text"] = "&Invert Selection";
            resDic["Menu.Edit.SelectAll.Text"] = "Select &All";
            resDic["Menu.Edit.Deselect.Text"] = "&Deselect";
            resDic["Menu.View.Text"] = "&View";
            resDic["Menu.View.ZoomIn.Text"] = "Zoom &In";
            resDic["Menu.View.ZoomIn.ShortcutKeyDisplayString"] = "Ctrl++";
            resDic["Menu.View.ZoomOut.Text"] = "Zoom &Out";
            resDic["Menu.View.ZoomOut.ShortcutKeyDisplayString"] = "Ctrl+-";
            resDic["Menu.View.ZoomToWindow.Text"] = "Zoom to &Window";
            resDic["Menu.View.ZoomToSelection.Text"] = "Zoom to &Selection";
            resDic["Menu.View.ActualSize.Text"] = "&Actual Size";
            resDic["Menu.View.Rulers.Text"] = "&Rulers";
            resDic["Menu.View.Grid.Text"] = "&Grid";
            resDic["Menu.Image.Text"] = "&Image";
            resDic["Menu.Image.Crop.Text"] = "Cro&p to Selection";
            resDic["Menu.Image.Resize.Text"] = "&Resize...";
            resDic["Menu.Image.CanvasSize.Text"] = "Canvas &Size...";
            resDic["Menu.Image.FlipHorizontal.Text"] = "Flip &Horizontal";
            resDic["Menu.Image.FlipVertical.Text"] = "Flip &Vertical";
            resDic["Menu.Image.Rotate.Text"] = "Ro&tate";
            resDic["Menu.Image.Rotate90CW.Text"] = "Rotate &90° Clockwise";
            resDic["Menu.Image.Rotate90CCW.Text"] = "Rotate 90° Counter-Clockwise";
            resDic["Menu.Image.Rotate180.Text"] = "Rotate &180°";
            resDic["Menu.Image.Flatten.Text"] = "&Flatten";
            resDic["Menu.Layers.Text"] = "&Layers";
            resDic["Menu.Layers.AddNewLayer.Text"] = "&Add New Layer";
            resDic["Menu.Layers.DeleteLayer.Text"] = "De&lete Layer";
            resDic["Menu.Layers.DuplicateLayer.Text"] = "&Duplicate Layer";
            resDic["Menu.Layers.MergeLayerDown.Text"] = "&Merge Layer Down";
            resDic["Menu.Layers.ImportFromFile.Text"] = "&Import From File...";
            resDic["Menu.Layers.Adjustments.Text"] = "&Adjustments";
            resDic["Menu.Layers.FlipHorizontal.Text"] = "Flip &Horizontal";
            resDic["Menu.Layers.FlipVertical.Text"] = "Flip &Vertical";
            resDic["Menu.Layers.LayerProperties.Text"] = "Layer &Properties...";
            resDic["Menu.Effects.Text"] = "Effe&cts";
            resDic["Menu.Tools.Text"] = "&Tools";
            resDic["Menu.Tools.AntiAliasing.Text"] = "&Antialiasing";
            resDic["Menu.Tools.AlphaBlending.Text"] = "Alpha &blending";
            resDic["Menu.Window.Text"] = "&Window";
            resDic["Menu.Window.ResetWindowLocations.Text"] = "&Reset Window Locations";
            resDic["Menu.Window.Translucent.Text"] = "Translucent";
            resDic["Menu.Window.Tools.Text"] = "&Tools";
            resDic["Menu.Window.History.Text"] = "&History";
            resDic["Menu.Window.Layers.Text"] = "&Layers";
            resDic["Menu.Window.Colors.Text"] = "&Colors";
            resDic["Menu.Window.OpenMdiList.Text"] = "&Show Image List";
            resDic["Menu.Window.NextTab.Text"] = "&Next Tab";
            resDic["Menu.Window.PreviousTab.Text"] = "&Previous Tab";
            resDic["Menu.Help.Language.Text"] = "Lan&guage";
            resDic["Menu.Help.Text"] = "&Help";
            resDic["Menu.Help.HelpTopics.Text"] = "&Help Topics";
            resDic["Menu.Help.PdnWebsite.Text"] = "&Paint.NET Website";
            resDic["Menu.Help.PdnSearch.Text"] = "Paint.NET &Search...";
            resDic["Menu.Help.Donate.Text"] = "&Donate...";
            resDic["Menu.Help.Forum.Text"] = "&Forum";
            resDic["Menu.Help.Tutorials.Text"] = "&Tutorials";
            resDic["Menu.Help.Plugins.Text"] = "&Plugins";
            resDic["Menu.Help.About.Text"] = "&About";
            resDic["Menu.Help.Updates.Text"] = "&Updates";
            resDic["Menu.Help.CheckForUpdates.Text"] = "Check f&or Updates...";
            resDic["Menu.Help.SendFeedback.Text"] = "Send feedback or bug report...";
            resDic["SendFeedback.Email.Body"] = "<< Enter your feedback or bug report here (English only). >>";
            resDic["SendFeedback.Email.Subject.Format"] = "Feedback for: {0}";
            resDic["ScaleFactor.Percentage.Format"] = "{0}%";
            resDic["Utility.SizeStringFromBytes.GBFormat"] = "{0} GB";
            resDic["Utility.SizeStringFromBytes.MBFormat"] = "{0} MB";
            resDic["Utility.SizeStringFromBytes.KBFormat"] = "{0} KB";
            resDic["Utility.SizeStringFromBytes.BytesFormat"] = "{0} bytes";
            resDic["BitmapLayer.Properties.BlendOp.Name"] = "Blend Mode";
            resDic["BmpFileType.Name"] = "Bitmap (BMP)";
            resDic["FileTypeCollection.AllImageTypes"] = "All image types";
            resDic["JpegFileType.ConfigUI.Quality.DisplayName"] = "Quality";
            resDic["Layer.Properties.IsBackground.Name"] = "Background Status";
            resDic["Layer.Properties.Name.Name"] = "Name";
            resDic["Layer.Properties.Visible.Name"] = "Visibility";
            resDic["Layer.Properties.Opacity.Name"] = "Opacity";
            resDic["Layer.Background.Name"] = "Background";
            resDic["LayerPropertiesDialog.Text"] = "Layer Properties";
            resDic["LayerPropertiesDialog.VisibleCheckBox.Text"] = "Visible";
            resDic["LayerPropertiesDialog.NameLabel.Text"] = "Name:";
            resDic["LayerPropertiesDialog.GeneralHeader.Text"] = "General";
            resDic["BitmapLayerPropertiesDialog.BlendingHeader.Text"] = "Blending";
            resDic["BitmapLayerPropertiesDialog.BlendModeLabel.Text"] = "Mode:";
            resDic["BitmapLayerPropertiesDialog.OpacityLabel.Text"] = "Opacity:";
            resDic["UserBlendOps.NormalBlendOp.Name"] = "Normal";
            resDic["UserBlendOps.MultiplyBlendOp.Name"] = "Multiply";
            resDic["UserBlendOps.AdditiveBlendOp.Name"] = "Additive";
            resDic["UserBlendOps.ColorBurnBlendOp.Name"] = "Color Burn";
            resDic["UserBlendOps.ColorDodgeBlendOp.Name"] = "Color Dodge";
            resDic["UserBlendOps.ReflectBlendOp.Name"] = "Reflect";
            resDic["UserBlendOps.GlowBlendOp.Name"] = "Glow";
            resDic["UserBlendOps.OverlayBlendOp.Name"] = "Overlay";
            resDic["UserBlendOps.NegationBlendOp.Name"] = "Negation";
            resDic["UserBlendOps.DifferenceBlendOp.Name"] = "Difference";
            resDic["UserBlendOps.ScreenBlendOp.Name"] = "Screen";
            resDic["UserBlendOps.LightenBlendOp.Name"] = "Lighten";
            resDic["UserBlendOps.DarkenBlendOp.Name"] = "Darken";
            resDic["UserBlendOps.XorBlendOp.Name"] = "Xor";
            resDic["AngleChooserConfigDialog.AngleHeader.Text"] = "Angle";
            resDic["AutoLevel.Name"] = "Auto-Level";
            resDic["Effects.Blurring.Submenu.Name"] = "Blurs";
            resDic["PencilSketchEffect.Name"] = "Pencil Sketch";
            resDic["PencilSketchEffect.ConfigDialog.PencilTipSizeLabel"] = "Pencil tip size";
            resDic["PencilSketchEffect.ConfigDialog.RangeLabel"] = "Range";
            resDic["OutlineEffect.Name"] = "Outline";
            resDic["OutlineEffect.ConfigDialog.ThicknessLabel"] = "Thickness";
            resDic["OutlineEffect.ConfigDialog.IntensityLabel"] = "Intensity";
            resDic["MedianEffect.Name"] = "Median";
            resDic["MedianEffect.ConfigDialog.RadiusLabel"] = "Radius";
            resDic["MedianEffect.ConfigDialog.PercentileLabel"] = "Percentile";
            resDic["UnfocusEffect.Name"] = "Unfocus";
            resDic["UnfocusEffect.ConfigDialog.AmountLabel"] = "Radius";
            resDic["UnfocusEffect.ConfigDialog.UnitsLabel"] = "pixels";
            resDic["FragmentEffect.Name"] = "Fragment";
            resDic["FragmentEffect.ConfigDialog.Fragments.DisplayName"] = "Fragment Count";
            resDic["FragmentEffect.ConfigDialog.Rotation.DisplayName"] = "Rotation";
            resDic["FragmentEffect.ConfigDialog.Distance.DisplayName"] = "Distance";
            resDic["SurfaceBlurEffect.Name"] = "Surface Blur";
            resDic["SurfaceBlurEffect.ConfigDialog.RadiusLabel"] = "Radius";
            resDic["SurfaceBlurEffect.ConfigDialog.ThresholdLabel"] = "Threshold";
            resDic["DentsEffect.Name"] = "Dents";
            resDic["DentsEffect.ConfigDialog.ScaleLabel"] = "Scale";
            resDic["DentsEffect.ConfigDialog.RefractionLabel"] = "Refraction";
            resDic["DentsEffect.ConfigDialog.RoughnessLabel"] = "Roughness";
            resDic["DentsEffect.ConfigDialog.TensionLabel"] = "Tension";
            resDic["DentsEffect.ConfigDialog.QualityLabel"] = "Quality";
            resDic["DentsEffect.ConfigDialog.SeedLabel"] = "Random Noise";
            resDic["DentsEffect.ConfigDialog.SeedButtonText"] = "Reseed";
            resDic["VignetteEffect.Name"] = "Vignette";
            resDic["VignetteEffect.ConfigDialog.CenterLabel"] = "Center";
            resDic["VignetteEffect.ConfigDialog.RadiusLabel"] = "Radius";
            resDic["VignetteEffect.ConfigDialog.DensityLabel"] = "Density";
            resDic["ZoomBlurEffect.Name"] = "Zoom Blur";
            resDic["ZoomBlurEffect.ConfigDialog.AmountLabel"] = "Zoom Amount";
            resDic["ZoomBlurEffect.ConfigDialog.Offset"] = "Center";
            resDic["BlurEffect.Name"] = "Gaussian Blur";
            resDic["GlowEffect.Name"] = "Glow";
            resDic["GlowEffect.Amount1.Name"] = "Radius";
            resDic["GlowEffect.Amount2.Name"] = "Brightness";
            resDic["GlowEffect.Amount3.Name"] = "Contrast";
            resDic["BulgeEffect.Name"] = "Bulge";
            resDic["DistortSubmenu.Name"] = "Distort";
            resDic["TileEffect.Name"] = "Tile Reflection";
            resDic["TwistEffect.Name"] = "Twist";
            resDic["BulgeEffect.BulgeAmount.Text"] = "Bulge";
            resDic["BulgeEffect.Offset.Text"] = "Center";
            resDic["TileEffect.Intensity.Text"] = "Curvature";
            resDic["TileEffect.Quality.Text"] = "Quality";
            resDic["TileEffect.Rotation.Text"] = "Angle";
            resDic["TileEffect.SquareSize.Text"] = "Tile Size";
            resDic["TwistEffect.Antialias.Text"] = "Quality";
            resDic["TwistEffect.Offset.Text"] = "Center";
            resDic["TwistEffect.TwistSize.Text"] = "Size";
            resDic["TwistEffect.TwistAmount.Text"] = "Amount / Direction";
            resDic["PolarInversion.Name"] = "Polar Inversion";
            resDic["PolarInversion.ConfigUI.Amount.DisplayName"] = "Amount";
            resDic["PolarInversion.ConfigUI.Offset.DisplayName"] = "Offset";
            resDic["PolarInversion.ConfigUI.EdgeBehavior.DisplayName"] = "Edge Behavior";
            resDic["PolarInversion.ConfigUI.EdgeBehavior.Clamp.DisplayName"] = "Clamp";
            resDic["PolarInversion.ConfigUI.EdgeBehavior.Reflect.DisplayName"] = "Reflect";
            resDic["PolarInversion.ConfigUI.EdgeBehavior.Wrap.DisplayName"] = "Wrap";
            resDic["PolarInversion.ConfigUI.Quality.DisplayName"] = "Quality";
            resDic["PosterizeAdjustment.Name"] = "Posterize";
            resDic["PosterizeAdjustment.ConfigDialog.RedLevels.DisplayName"] = "Red";
            resDic["PosterizeAdjustment.ConfigDialog.GreenLevels.DisplayName"] = "Green";
            resDic["PosterizeAdjustment.ConfigDialog.BlueLevels.DisplayName"] = "Blue";
            resDic["PosterizeAdjustment.ConfigDialog.LinkLevels.Description"] = "Linked";
            resDic["BrightnessAndContrastAdjustment.Name"] = "Brightness / Contrast";
            resDic["BrightnessAndContrastAdjustment.Brightness"] = "Brightness";
            resDic["BrightnessAndContrastAdjustmnet.Contrast"] = "Contrast";
            resDic["DesaturateEffect.Name"] = "Black and White";
            resDic["EdgeDetectEffect.Name"] = "Edge Detect";
            resDic["EmbossEffect.Name"] = "Emboss";
            resDic["FrostedGlassEffect.Name"] = "Frosted Glass";
            resDic["FrostedGlassEffect.ConfigDialog.MinScatterRadius.DisplayName"] = "Minimum Scatter Radius";
            resDic["FrostedGlassEffect.ConfigDialog.MaxScatterRadius.DisplayName"] = "Maximum Scatter Radius";
            resDic["FrostedGlassEffect.ConfigDialog.NumSamples.DisplayName"] = "Smoothness";
            resDic["HueAndSaturationAdjustment.Name"] = "Hue / Saturation";
            resDic["HueAndSaturationAdjustment.Amount1Label"] = "Hue";
            resDic["HueAndSaturationAdjustment.Amount2Label"] = "Saturation";
            resDic["HueAndSaturationAdjustment.Amount3Label"] = "Lightness";
            resDic["InvertColorsEffect.Name"] = "Invert Colors";
            resDic["LevelsEffect.Name"] = "Levels";
            resDic["LevelsEffectConfigDialog.OutputGroupBox.Text"] = "Output";
            resDic["LevelsEffectConfigDialog.OutputGammaUpDown.ToolTipText"] = "Output Gamma";
            resDic["LevelsEffectConfigDialog.SwatchOutHigh.ToolTipText"] = "Output White Point (double click to choose)";
            resDic["LevelsEffectConfigDialog.SwatchOutLow.ToolTipText"] = "Output Black Point (double click to choose)";
            resDic["LevelsEffectConfigDialog.OutputHistogramGroupBox.Text"] = "Output Histogram";
            resDic["LevelsEffectConfigDialog.HistogramOutput.ToolTipText"] = "This histogram shows a preview of the distribution of color in the resultant image";
            resDic["LevelsEffectConfigDialog.InputHistogramGroupBox.Text"] = "Input Histogram";
            resDic["LevelsEffectConfigDialog.HistogramInput.ToolTipText"] = "This histogram shows the distribution of color in the original image.";
            resDic["LevelsEffectConfigDialog.InputGroupBox.Text"] = "Input";
            resDic["LevelsEffectConfigDialog.SwatchInHigh.ToolTipText"] = "Input White Point (double click to choose)";
            resDic["LevelsEffectConfigDialog.SwatchInLow.ToolTipText"] = "Input Black Point (double click to choose)";
            resDic["LevelsEffectConfigDialog.RedMaskCheckBox.Text"] = "R";
            resDic["LevelsEffectConfigDialog.RedMaskCheckBox.ToolTipText"] = "Toggle manipulation of the red channel";
            resDic["LevelsEffectConfigDialog.GreenMaskCheckBox.Text"] = "G";
            resDic["LevelsEffectConfigDialog.GreenMaskCheckBox.ToolTipText"] = "Toggle manipulation of the green channel";
            resDic["LevelsEffectConfigDialog.BlueMaskCheckBox.Text"] = "B";
            resDic["LevelsEffectConfigDialog.BlueMaskCheckBox.ToolTipText"] = "Toggle manipulation of the blue channel";
            resDic["LevelsEffectConfigDialog.AutoButton.Text"] = "Auto";
            resDic["LevelsEffectConfigDialog.AutoButton.ToolTipText"] = "Automatically adjusts the input white point, black point, and output gamma to equalize the image";
            resDic["LevelsEffectConfigDialog.ResetButton.Text"] = "Reset";
            resDic["LevelsEffectConfigDialog.Text"] = "Levels Adjustment";
            resDic["MotionBlurEffect.Name"] = "Motion Blur";
            resDic["MotionBlurEffectConfigDialog.Text"] = "Motion Blur";
            resDic["MotionBlurEffectConfigDialog.DegreeLabel.Text"] = "°";
            resDic["MotionBlurEffectConfigDialog.PixelsLabel.Text"] = "pixels";
            resDic["MotionBlurEffectConfigDialog.CenteredCheckBox.Text"] = "Centered";
            resDic["MotionBlurEffectConfigDialog.AngleHeader.Text"] = "Angle";
            resDic["MotionBlurEffectConfigDialog.DistanceHeader.Text"] = "Distance";
            resDic["OilPaintingEffect.Name"] = "Oil Painting";
            resDic["OilPaintingEffect.ConfigDialog.Amount1Label"] = "Brush size";
            resDic["OilPaintingEffect.ConfigDialog.Amount2Label"] = "Coarseness";
            resDic["PixelateEffect.Name"] = "Pixelate";
            resDic["PixelateEffect.ConfigDialog.SliderLabel"] = "Cell size";
            resDic["PixelateEffect.ConfigDialog.SliderUnitsName"] = "pixels";
            resDic["RedEyeRemoveEffect.Name"] = "Red Eye Removal";
            resDic["RedEyeRemoveEffect.ConfigDialog.Amount1Label"] = "Tolerance";
            resDic["RedEyeRemoveEffect.ConfigDialog.Amount2Label"] = "Saturation percentage";
            resDic["RedEyeRemoveEffectDialog.UsageHintLabel.Text"] = "Hint: For best results, first use the selection tools to select each eye";
            resDic["ReliefEffect.Name"] = "Relief";
            resDic["SharpenEffect.Name"] = "Sharpen";
            resDic["SharpenEffect.ConfigDialog.SliderLabel"] = "Amount";
            resDic["TwoAmountsConfigDialog.Reset.Text"] = "Reset";
            resDic["BlurEffect.ConfigDialog.SliderLabel"] = "Radius";
            resDic["BlurEffect.ConfigDialog.SliderUnitsName"] = "pixels";
            resDic["AngleChooserConfigDialog.DegreeLabel.Text"] = "°";
            resDic["WorkspaceOptionsConfigWidget.UnitsLabel.Text"] = "Units:";
            resDic["MeasurementUnit.Pixel"] = "Pixel";
            resDic["MeasurementUnit.Inch"] = "Inch";
            resDic["MeasurementUnit.Centimeter"] = "Centimeter";
            resDic["MeasurementUnit.Pixel.Plural"] = "Pixels";
            resDic["MeasurementUnit.Inch.Plural"] = "Inches";
            resDic["MeasurementUnit.Centimeter.Plural"] = "Centimeters";
            resDic["MeasurementUnit.Pixel.Abbreviation"] = "px";
            resDic["MeasurementUnit.Centimeter.Abbreviation"] = "cm";
            resDic["MeasurementUnit.Inch.Abbreviation"] = "in";
            resDic["StatusBar.CursorInfo.Format"] = "{0}{1}, {2}{3}";
            resDic["ResizeAction.ProgressDialog.Description"] = "Resizing...";
            resDic["ResizeDialog.ResolutionLabel.Text"] = "Resolution:";
            resDic["MeasurementUnit.Inch.Ratio"] = "pixels/inch";
            resDic["MeasurementUnit.Centimeter.Ratio"] = "pixels/cm";
            resDic["MeasurementUnit.Pixel.Ratio"] = "pixels";
            resDic["UpdatesDialog.Text"] = "Paint.NET Updates";
            resDic["UpdatesDialog.OptionsButton.Text"] = "&Options...";
            resDic["UpdatesDialog.MoreInfoLink.Text"] = "More Info...";
            resDic["UpdatesDialog.NewVersionLabel.Text"] = "New version:";
            resDic["UpdatesDialog.ProgressLabel.Text.Format"] = "{0}%";
            resDic["UpdatesDialog.InfoText.Text.StartupState"] = "The Paint.NET Updates System is initializing.";
            resDic["UpdatesDialog.ContinueButton.Text.StartupState"] = "Initializing";
            resDic["UpdatesDialog.InfoText.Text.ReadyToCheckState"] = "Paint.NET is ready to check for updates.";
            resDic["UpdatesDialog.ContinueButton.Text.ReadyToCheckState"] = "Check Now";
            resDic["UpdatesDialog.InfoText.Text.CheckingState"] = "Paint.NET is currently checking to see if there is a newer version available.";
            resDic["UpdatesDialog.ContinueButton.Text.CheckingState"] = "Checking";
            resDic["UpdatesDialog.InfoText.Text.UpdateAvailableState"] = "A newer version of Paint.NET is available. You may click the Install button below to download and install the update.";
            resDic["UpdatesDialog.ContinueButton.Text.UpdateAvailableState"] = "&Install";
            resDic["UpdatesDialog.InfoText.Text.DownloadingState"] = "The update for Paint.NET is being downloaded.";
            resDic["UpdatesDialog.ContinueButton.Text.DownloadingState"] = "Downloading";
            resDic["UpdatesDialog.InfoText.Text.ExtractingState"] = "The update has been downloaded, and is currently being extracted and verified.";
            resDic["UpdatesDialog.ContinueButton.Text.ExtractingState"] = "Extracting";
            resDic["UpdatesDialog.InfoText.Text.ReadyToInstallState"] = "Paint.NET must close to install the update. After you click OK, you will be asked to save any changes if necessary.";
            resDic["UpdatesDialog.ContinueButton.Text.ReadyToInstallState"] = "OK";
            resDic["UpdatesDialog.InfoText.Text.InstallingState"] = "Installing the update!";
            resDic["UpdatesDialog.ContinueButton.Text.InstallingState"] = "Installing";
            resDic["UpdatesDialog.InfoText.Text.DoneState"] = "No updates are currently available.";
            resDic["UpdatesDialog.ContinueButton.Text.DoneState"] = "Done";
            resDic["UpdatesDialog.InfoText.Text.AbortedState"] = "The updater was aborted.";
            resDic["UpdatesDialog.ContinueButton.Text.AbortedState"] = "";
            resDic["UpdatesDialog.InfoText.Text.ErrorState.Format"] = @"There was an error while checking for updates.

{0}";
            resDic["UpdatesDialog.ContinueButton.Text.ErrorState"] = "";
            resDic["UpdatesDialog.InfoLabel.Text"] = "A newer version of Paint.NET is available. You may click the Install button to download and install it, or you may click Close to be reminded again in several days.";
            resDic["UpdatesDialog.BetaWarningLabel.Text"] = "NOTE: This is a pre-release version (beta). It may not be stable.";
            resDic["UpdatesDialog.CloseButton.Text"] = "Close";
            resDic["UpdatesDialog.NewVersionZipLabel.Text"] = "Download:";
            resDic["UpdatesDialog.CurrentVersionHeader.Text"] = "Currently Installed Version";
            resDic["UpdatesDialog.NewVersionHeader.Text"] = "New Version";
            resDic["UpdatesDialog.InstallButton.Text"] = "Install";
            resDic["UpdatesOptionsDialog.Text"] = "Paint.NET Update Options";
            resDic["UpdatesOptionsDialog.SaveButton.Text"] = "&Save";
            resDic["UpdatesOptionsDialog.AutoCheckBox.Text"] = "Automatically check for newer versions of Paint.NET";
            resDic["UpdatesOptionsDialog.BetaCheckBox.Text"] = "Also check for pre-release (beta) versions";
            resDic["UpdatesOptionsDialog.AllUsersNoticeLabel.Text"] = "Note: These settings affect all users of this computer.";
            resDic["ExpiredDialog.Message"] = @"This pre-release version of Paint.NET has expired (30 days).

Click OK to go to the Paint.NET website where you may download a newer version.";
            resDic["ExpiredTaskDialog.InfoText"] = "This pre-release version of Paint.NET has expired. To continue using Paint.NET, you must update to the latest version.";
            resDic["ExpiredTaskDialog.CheckForUpdatesTB.ActionText"] = "&Check for an Update";
            resDic["ExpiredTaskDialog.CheckForUpdatesTB.ExplanationText"] = "Check to see if an update is available, and then install it.";
            resDic["ExpiredTaskDialog.GoToWebSiteTB.ActionText"] = "&Go to the Paint.NET website";
            resDic["ExpiredTaskDialog.GoToWebSiteTB.ExplanationText"] = "If checking for updates does not work, you may try going to the website to manually find an update.";
            resDic["ExpiredTaskDialog.DoNotCheckForUpdatesTB.ActionText"] = "E&xit";
            resDic["ExpiredTaskDialog.DoNotCheckForUpdatesTB.ExplanationText"] = "Exit Paint.NET without checking for updates.";
            resDic["DownloadAndUnzipUpdateDialog.Text"] = "Paint.NET Updates";
            resDic["DownloadAndUnzipUpdateDialog.Description.Downloading"] = "Downloading...";
            resDic["DownloadAndUnzipUpdateDialog.Description.Extracting"] = "Extracting...";
            resDic["DownloadAndUnzipUpdateDialog.Error.Generic"] = "There was an error downloading and installing the new version. Please try again later with the 'Help -> Check for Updates ...' menu command.";
            resDic["ConfirmLanguageDialog.Title"] = "Language Choice Confirmation";
            resDic["ConfirmLanguageDialog.IntroText"] = "Changing the language requires that Paint.NET be restarted.";
            resDic["ConfirmLanguageDialog.RestartTB.ActionText"] = "&Restart Paint.NET";
            resDic["ConfirmLanguageDialog.RestartTB.ExplanationText.Format"] = "Closes Paint.NET and then restarts it in {0}. You will be asked to save your changes if necessary.";
            resDic["ConfirmLanguageDialog.CancelTB.ActionText"] = "Cancel";
            resDic["ConfirmLanguageDialog.CancelTB.ExplanationText"] = "Does not close Paint.NET. Your language choice will be cancelled.";
            resDic["ReduceNoiseEffect.Name"] = "Reduce Noise";
            resDic["ReduceNoise.Radius.DisplayName"] = "Radius";
            resDic["ReduceNoise.Strength.DisplayName"] = "Strength";
            resDic["AddNoiseEffect.Amount1Label"] = "Intensity";
            resDic["AddNoiseEffect.Amount2Label"] = "Color Saturation";
            resDic["AddNoiseEffect.Coverage"] = "Coverage";
            resDic["AddNoiseEffect.Name"] = "Add Noise";
            resDic["ClearOpenRecentList.Dialog.Text"] = "Are you sure you want to clear the Open Recent list?";
            resDic["SepiaEffect.Name"] = "Sepia";
            resDic["NonAdminErrorBox.Message"] = "You must be a system administrator to perform this action.";
            resDic["BmpFileType.ConfigUI.BitDepth.DisplayName"] = "Bit Depth";
            resDic["BmpFileType.ConfigUI.BitDepth.AutoDetect.DisplayName"] = "Auto-detect";
            resDic["BmpFileType.ConfigUI.BitDepth.Bpp24.DisplayName"] = "24-bit";
            resDic["BmpFileType.ConfigUI.BitDepth.Bpp8.DisplayName"] = "8-bit";
            resDic["BmpFileType.ConfigUI.DitherLevel.DisplayName"] = "Dithering level";
            resDic["PngFileType.ConfigUI.BitDepth.DisplayName"] = "Bit Depth";
            resDic["PngFileType.ConfigUI.BitDepth.AutoDetect.DisplayName"] = "Auto-detect";
            resDic["PngFileType.ConfigUI.BitDepth.Bpp32.DisplayName"] = "32-bit";
            resDic["PngFileType.ConfigUI.BitDepth.Bpp24.DisplayName"] = "24-bit";
            resDic["PngFileType.ConfigUI.BitDepth.Bpp8.DisplayName"] = "8-bit";
            resDic["PngFileType.ConfigUI.DitherLevel.DisplayName"] = "Dithering level";
            resDic["PngFileType.ConfigUI.Threshold.DisplayName"] = "Transparency threshold";
            resDic["PngFileType.ConfigUI.Threshold.Description"] = "Pixels with an alpha value less than the threshold will be fully transparent.";
            resDic["GifFileType.ConfigUI.Threshold.DisplayName"] = "Transparency threshold";
            resDic["GifFileType.ConfigUI.DitherLevel.DisplayName"] = "Dithering level";
            resDic["GifSaveConfigWidget.PreMultiplyAlphaCheckBox.Text"] = "Multiply by alpha channel";
            resDic["GifFileType.ConfigUI.Threshold.Description"] = "Pixels with an alpha value less than the threshold will be fully transparent.";
            resDic["SetupWizard.MustCloseAppFirst.Text"] = "Please ensure that Paint.NET is closed, and then click Retry. Or, press Cancel to exit the setup wizard.";
            resDic["SetupWizard.HelpText"] = @"Paint.NET Installer Help

Command-line options:

/skipConfig  -  Skips configuration of options and install directory. Uses MSI properties in the following order of precedence: 1. supplied on command-line, 2. read from HKLM\Software\Paint.NET, 3. default values. NOTE: Use of this option infers acceptance of the License Agreement.
/auto  -  Automatic install. Infers /skipConfig. Does not show the final wizard page that details the result of installation.
/createMsi  -  Creates MSI packages that may be used for deployment (AD/GPO) purposes. All properties specified on the command-line are merged into the MSI packages, so no further transforms are necessary.
/verbose  -  Enables verbose Windows Installer MSI logging
PROPERTY=VALUE  -  Sets an MSI property. See help file after installing for more information. You do not need to specify /saveMsi to specify properties.

Return code is 0 on success, or non-zero on failure.";
            resDic["SetupWizard.x86Msi.LaunchCondition.NotAllowedOn64bitOS"] = "32-bit MSI may not be installed on 64-bit OS.";
            resDic["Error.OSRequirement"] = "Paint.NET requires Windows XP SP2, Windows Vista, Windows Server 2003, or later.";
            resDic["SetupWizard.Error.AdminRequired"] = "Administrator privilege is required to install Paint.NET.";
            resDic["SetupWizard.CancelButton.Text"] = "Cancel";
            resDic["SetupWizard.BackButton.Text"] = "< &Back";
            resDic["SetupWizard.NextButton.Text"] = "&Next >";
            resDic["SetupWizard.NextButton.Text.Finished"] = "Finish";
            resDic["SetupWizard.CancelDialog.Message"] = "The installation is not yet complete. Are you sure you want to exit?";
            resDic["SetupWizard.IntroPage.HeaderText"] = "Setup Wizard";
            resDic["SetupWizard.IntroPage.IntroText.Text.Format"] = @"This installer will help you install {0}.

Choose the installation method you prefer, and then click Next.";
            resDic["SetupWizard.IntroPage.QuickRB.Text"] = "Quick";
            resDic["SetupWizard.IntroPage.QuickDescription.Text"] = "This is the recommended choice for most users. This installs using the default options, or the same options that were specified during a previous installation.";
            resDic["SetupWizard.IntroPage.CustomRB.Text"] = "Custom";
            resDic["SetupWizard.IntroPage.CustomDescription.Text"] = "Allows you to change the installation directory, and options related to file type associations and update checking.";
            resDic["SetupWizard.IntroPage.ExpirationWarning.Format"] = "NOTE: This is a pre-release version of Paint.NET that will expire on {0}.";
            resDic["SetupWizard.LicensePage.HeaderText"] = "License Agreement";
            resDic["SetupWizard.LicensePage.IntroText.Text"] = @"Please take a moment to read the license agreement now. If you accept the terms below, click ""I Agree"", then ""Next"". Otherwise click ""Cancel"".";
            resDic["SetupWizard.LicensePage.DontAgreeButton.Text"] = "I &Do Not Agree";
            resDic["SetupWizard.LicensePage.AgreeButton.Text"] = "I &Agree";
            resDic["SetupWizard.OptionsPage.HeaderText"] = "Configure Options";
            resDic["SetupWizard.OptionsPage.LaunchHandlingText.Text"] = "Use these options to configure how Paint.NET can be launched.";
            resDic["SetupWizard.OptionsPage.JpgPngBmpCheckBox.Text"] = "Use it as the default image editor for JPEG, PNG, and BMP images";
            resDic["SetupWizard.OptionsPage.TgaCheckBox.Text"] = "Use it as the default image editor for TGA images";
            resDic["SetupWizard.OptionsPage.DesktopShortcutCheckBox.Text"] = "Create a shortcut on the Desktop";
            resDic["SetupWizard.OptionsPage.UpdatesText.Text"] = "Paint.NET can periodically check to see if there is a new version available and then notify you. No information is transmitted from your computer during this process. Note: You will only be notified of new versions while Paint.NET is running.";
            resDic["SetupWizard.OptionsPage.CheckForUpdatesCheckBox.Text"] = "Automatically check for updates";
            resDic["SetupWizard.OptionsPage.CheckForBetasCheckBox.Text"] = "Also check for pre-release (beta) versions";
            resDic["SetupWizard.InstallDirPage.HeaderText"] = "Select Installation Folder";
            resDic["SetupWizard.InstallDirPage.IntroText.Text.Format"] = @"The installer will install {0} to the following folder.

To install in this folder, click ""Next"". To install to a different folder, enter it below or click ""Browse"".";
            resDic["SetupWizard.InstallDirPage.FolderLabel.Text"] = "Folder:";
            resDic["SetupWizard.InstallDirPage.BrowseButton.Text"] = "&Browse...";
            resDic["SetupWizard.InstallDirPage.DefaultTargetSubDir"] = "Paint.NET";
            resDic["SetupWizard.InstallDirPage.BrowseForFolder.Description"] = "Choose an installation folder:";
            resDic["SetupWizard.InstallDirPage.BadDirError.Message"] = "The specified folder could not be created. You will need to choose another folder to install to.";
            resDic["SetupWizard.ReadyToInstallPage.HeaderText"] = "Confirm Installation";
            resDic["SetupWizard.ReadyToInstallPage.IntroText.Text.Format"] = @"The installer is ready to install {0} on your computer.

Click ""Next"" to start the installation.";
            resDic["SetupWizard.InstallingPage.HeaderText.Installing"] = "Installing";
            resDic["SetupWizard.InstallingPage.HeaderText.Success"] = "Installation Succeeded";
            resDic["SetupWizard.InstallingPage.HeaderText.Failure"] = "Error";
            resDic["SetupWizard.InstallingPage.InfoText.Text.OpenSRPoint"] = "Creating system restore point...";
            resDic["SetupWizard.InstallingPage.InfoText.Text.CloseSRPoint"] = "Closing system restore point...";
            resDic["SetupWizard.InstallingPage.InfoText.Text.Uninstalling"] = "Removing previous version...";
            resDic["SetupWizard.InstallingPage.InfoText.Text.Installing.Format"] = "{0} is being installed...";
            resDic["SetupWizard.InstallingPage.InfoText.Text.Optimizing"] = "Optimizing performance for your system. This may take a minute.";
            resDic["SetupWizard.InstallingPage.InfoText.Text.Success.Format"] = @"{0} was installed successfully. Click ""Finish"" to close this installation wizard.";
            resDic["SetupWizard.InstallingPage.InfoText.Text.Success.RebootRequired.Format"] = @"{0} was installed successfully. A reboot may be required to use it properly. Click ""Finish"" to close this installation wizard.";
            resDic["SetupWizard.InstallingPage.InfoText.Text.Failure.Format"] = "There was an error while installing {0}.";
            resDic["SetupWizard.InstallingPage.PdnDonateBannerImage.Text"] = "Thanks for using Paint.NET. You can show your appreciation and support future development by donating!";
            resDic["SetupWizard.CreateMsiPage.HeaderText"] = "Deployment Wizard";
            resDic["SetupWizard.CreateMsiPage.IntroText.Text.Creating"] = "Creating MSI packages...";
            resDic["SetupWizard.CreateMsiPage.IntroText.Text.Finished"] = "The MSI packages have been placed into the following directory: '{0}'.";
            resDic["SetupWizard.InstallingPage.WhileInstallingLabel.Text"] = "Paint.NET is provided FREE OF CHARGE. If you paid money for it (other than to <a>donate at the Paint.NET website</a>, of course) then we recommend that you get a refund!";
            resDic["Setup.DesktopShortcut.LinkName"] = "Paint.NET";
            resDic["Setup.DesktopShortcut.Description"] = "Create, edit, scan, and print images and photographs.";
            resDic["RotateZoomEffect.Name"] = "Rotate / Zoom";
            resDic["RotateZoomEffectConfigDialog.FineTuningHeader.Text"] = "Fine Tuning";
            resDic["RotateZoomEffectConfigDialog.KeepBackgroundCheckBox.Text"] = "Preserve background";
            resDic["RotateZoomEffectConfigDialog.TileSourceCheckBox.Text"] = "Tiling";
            resDic["RotateZoomEffectConfigDialog.HeaderRoll.Text"] = "Roll / Rotate";
            resDic["RotateZoomEffectConfigDialog.AngleLabel.Text"] = "Angle:";
            resDic["RotateZoomEffectConfigDialog.HeaderPan.Text"] = "Pan";
            resDic["RotateZoomEffectConfigDialog.PanXLabel.Text"] = "X Pan:";
            resDic["RotateZoomEffectConfigDialog.PanYLabel.Text"] = "Y Pan:";
            resDic["RotateZoomEffectConfigDialog.PanResetButton.Text"] = "Reset";
            resDic["RotateZoomEffectConfigDialog.ZoomResetButton.Text"] = "Reset";
            resDic["RotateZoomEffectConfigDialog.TwistAngleLabel.Text"] = "Twist Angle:";
            resDic["RotateZoomEffectConfigDialog.TwistRadiusLabel.Text"] = "Twist Radius:";
            resDic["RotateZoomEffectConfigDialog.RollResetButton.Text"] = "Reset";
            resDic["RotateZoomEffectConfigDialog.ResetAllButton.Text"] = "&Reset All";
            resDic["RotateZoomEffectConfigDialog.HeaderZoom.Text"] = "Zoom";
            resDic["RotateZoomEffectConfigDialog.ZoomLabel.Text.Format"] = "{0}x";
            resDic["TgaFileType.ConfigUI.BitDepth.DisplayName"] = "Bit Depth";
            resDic["TgaFileType.ConfigUI.RleCompress.Description"] = "Compress (RLE)";
            resDic["TgaFileType.ConfigUI.BitDepth.Bpp24.DisplayName"] = "24-bit";
            resDic["TgaFileType.ConfigUI.BitDepth.Bpp32.DisplayName"] = "32-bit";
            resDic["TgaFileType.ConfigUI.BitDepth.AutoDetect.DisplayName"] = "Auto-detect";
            resDic["LaunchLink.Error"] = "There was an error launching the link.";
            resDic["LaunchLink.Error.Format"] = "There was an error launching the link: {0}";
            resDic["RadialBlurEffect.Name"] = "Radial Blur";
            resDic["RadialBlurEffect.ConfigDialog.RadialLabel"] = "Angle";
            resDic["RadialBlurEffect.ConfigDialog.QualityLabel"] = "Quality";
            resDic["RadialBlurEffect.ConfigDialog.QualityDescription"] = "Low quality is useful for quick previews, small images, or small angle values. High quality is useful for final quality, large images, or large angle values.";
            resDic["RadialBlurEffect.ConfigDialog.OffsetLabel"] = "Center";
            resDic["WebExceptionStatus.ConnectFailure"] = "The remote service point could not be contacted at the transport level.";
            resDic["WebExceptionStatus.ConnectionClosed"] = "The connection was prematurely closed.";
            resDic["WebExceptionStatus.KeepAliveFailure"] = "The connection for a request that specifies the keep-alive header was closed unexpectedly.";
            resDic["WebExceptionStatus.MessageLengthLimitExceeded"] = "A message was received that exceeded the specified limit when sending a request or receiving a response from the server.";
            resDic["WebExceptionStatus.NameResolutionFailure"] = "The name resolver service could not resolve the host name.";
            resDic["WebExceptionStatus.Pending"] = "An internal asynchronous request is pending.";
            resDic["WebExceptionStatus.PipelineFailure"] = "There was an internal .NET error (WebExceptionStatus.PipelineFailure).";
            resDic["WebExceptionStatus.ProtocolError"] = "The response received from the server was complete but indicated a protocol-level error. For example, an HTTP protocol error such as 401 Access Denied would use this status.";
            resDic["WebExceptionStatus.ProtocolError.Format"] = "The server returned the following error code: HTTP {1} ({0})";
            resDic["WebExceptionStatus.ProxyNameResolutionFailure"] = "The name resolver service could not resolve the proxy host name.";
            resDic["WebExceptionStatus.ReceiveFailure"] = "A complete response was not received from the remote server.";
            resDic["WebExceptionStatus.RequestCanceled"] = "There was an internal error (WebExceptionStatus.RequestCanceled)";
            resDic["WebExceptionStatus.SecureChannelFailure"] = "An error occurred while establishing a connection using SSL.";
            resDic["WebExceptionStatus.SendFailure"] = "A complete request could not be sent to the remote server.";
            resDic["WebExceptionStatus.ServerProtocolViolation"] = "The server response was not a valid HTTP response.";
            resDic["WebExceptionStatus.Success"] = "No error was encountered.";
            resDic["WebExceptionStatus.Timeout"] = "No response was received during the time-out period for a request.";
            resDic["WebExceptionStatus.TrustFailure"] = "A server certificate could not be validated.";
            resDic["WebExceptionStatus.UnknownError"] = "An exception of unknown type has occurred.";
            resDic["CurvesEffect.Name"] = "Curves";
            resDic["CurvesEffectConfigDialog.Text"] = "Curves";
            resDic["CurvesEffectConfigDialog.InputHeader.Text"] = "Input Histogram";
            resDic["CurvesEffectConfigDialog.TransferHeader.Text"] = "Transfer Map";
            resDic["CurvesEffectConfigDialog.OutputHeader.Text"] = "Output Histogram";
            resDic["CurveControlRgb.Red"] = "Red";
            resDic["CurveControlRgb.Green"] = "Green";
            resDic["CurveControlRgb.Blue"] = "Blue";
            resDic["CurveControlLuminosity.Luminosity"] = "Luminosity";
            resDic["CurvesEffectConfigDialog.HelpText.Text"] = "Tip: Right-click to remove control points.";
            resDic["CurvesEffectConfigDialog.Coordinates.Format"] = "({0}, {1})";
            resDic["CurvesEffectConfigDialog.ResetButton.Text"] = "&Reset";
            resDic["ColorTransferMode.Luminosity"] = "Luminosity";
            resDic["ColorTransferMode.Rgb"] = "RGB";
            resDic["CrashLog.HeaderText.Format"] =
                "This text file was created because Paint.NET crashed. Please e-mail this file to {0} so we can diagnose and fix the problem.";
            resDic["SwapLayerFunction.Name"] = "Swap Layer";
            resDic["ExecuteFunction.GenericOutOfMemory"] = "There was not enough memory to perform the action.";
            resDic["ExecuteFunction.GenericError"] = "There was an error performing the action.";
            resDic["FontSmoothing.None"] = "None";
            resDic["FontSmoothing.Sharp"] = "Sharp";
            resDic["FontSmoothing.Smooth"] = "Smooth";
            resDic["ToolStripChooser.ChooseToolButton.Text"] = "&Tool:";
            resDic["ToleranceConfig.ToleranceLabel.Text"] = "Tolerance:";
            resDic["Updates.ExtractingState.GenericError"] = "There was an error decompressing the download.";
            resDic["Updates.DownloadingState.GenericError"] = "There was an unspecified error while downloading the update.";
            resDic["Updates.CheckingState.GenericError"] = "There was an unspecified error while checking for updates.";
            resDic["UnsavedChangesDialog.Text"] = "Unsaved Changes";
            resDic["UnsavedChangesDialog.InfoLabel.Text"] = "The following images that are open have changes that have not been saved. You may click on a thumbnail to show the image in the main window.";
            resDic["UnsavedChangesDialog.DocumentListHeader.Text"] = "Images";
            resDic["UnsavedChangesDialog.SaveButton.ActionText"] = "&Save";
            resDic["UnsavedChangesDialog.SaveButton.ExplanationText"] = "Save the images that are in the list above, and then exit.";
            resDic["UnsavedChangesDialog.DontSaveButton.ActionText"] = "Do&n't Save";
            resDic["UnsavedChangesDialog.DontSaveButton.ExplanationText"] = "Discard all unsaved changes, and then exit.";
            resDic["UnsavedChangesDialog.CancelButton.ActionText"] = "Cancel";
            resDic["UnsavedChangesDialog.CancelButton.ExplanationText"] = "Go back to Paint.NET";
            resDic["TaskButton.Cancel.ActionText"] = "Cancel";
            resDic["TaskButton.Cancel.ExplanationText"] = "";
            resDic["ControlShadow.BetaTag.Text.Format"] =
                "This is a pre-release version, and is recommended for testing purposes only. Expires on {1}. An update will be available before then. www.getpaint.net";
            resDic["ToolChooserStrip.ChooseToolDefaults.Text"] = "Choose &defaults...";
            resDic["ChooseToolDefaultsDialog.IntroText.Text"] = "You may choose the tool that is active when starting Paint.NET, and what the defaults should be for the toolbar items.";
            resDic["ChooseToolDefaultsDialog.LoadFromToolBarButton.Text"] = "&Load From Toolbar";
            resDic["ChooseToolDefaultsDialog.ResetButton.Text"] = "&Reset";
            resDic["ChooseToolDefaultsDialog.DefaultToolText.Text"] = "Default tool:";
            resDic["ChooseToolDefaultsDialog.ToolConfigRow.Resampling.HeaderLabel.Text"] = "Move Selected Pixels";
            resDic["ChooseToolDefaultsDialog.ToolConfigRow.BrushPenPenCapsShapeType.HeaderLabel.Text"] = "Shape, Brush, Style, and Fill";
            resDic["ChooseToolDefaultsDialog.ToolConfigRow.Text.HeaderLabel.Text"] = "Text";
            resDic["ChooseToolDefaultsDialog.ToolConfigRow.Gradient.HeaderLabel.Text"] = "Gradient";
            resDic["ChooseToolDefaultsDialog.ToolConfigRow.ToleranceFloodMode.HeaderLabel.Text"] = "Magic Wand, Paint Bucket, and Recolor";
            resDic["ChooseToolDefaultsDialog.ToolConfigRow.ColorPickerBehavior.HeaderLabel.Text"] = "Color Picker";
            resDic["ChooseToolDefaultsDialog.ToolConfigRow.AlphaBlendingAntialiasing.HeaderLabel.Text"] = "Rasterization";
            resDic["ChooseToolDefaultsDialog.ToolConfigRow.SelectionCombineModeSelectionDrawMode.HeaderLabel.Text"] = "Selection Tools";
            resDic["ChooseToolDefaultsDialog.Text"] = "Choose Defaults";
            resDic["CloseWorkspaceAction.Title"] = "Unsaved Changes";
            resDic["CloseWorkspaceAction.SaveButton.ActionText"] = "&Save";
            resDic["CloseWorkspaceAction.SaveButton.ExplanationText"] = "Save the image, and then close it.";
            resDic["CloseWorkspaceAction.DontSaveButton.ActionText"] = "Do&n't Save";
            resDic["CloseWorkspaceAction.DontSaveButton.ExplanationText"] = "Discard the unsaved changes.";
            resDic["CloseWorkspaceAction.CancelButton.ActionText"] = "Cancel";
            resDic["CloseWorkspaceAction.CancelButton.ExplanationText"] = "Go back to Paint.NET.";
            resDic["CloseWorkspaceAction.IntroText.Format"] = "{0} has unsaved changes. What would you like to do?";
            resDic["GradientType.LinearClamped"] = "Linear";
            resDic["GradientType.LinearReflected"] = "Linear (Reflected)";
            resDic["GradientType.LinearDiamond"] = "Diamond";
            resDic["GradientType.Radial"] = "Radial";
            resDic["GradientType.Conical"] = "Conical";
            resDic["GradientChannels.AllColorChannels.Text"] = "Color Mode";
            resDic["GradientChannels.AlphaChannelOnly.Text"] = "Transparency Mode";
            resDic["AlphaBlendingSplitButton.BlendingEnabled.Text"] = "Normal Blending";
            resDic["AlphaBlendingSplitButton.BlendingOverwrite.Text"] = "Overwrite";
            resDic["AntiAliasingSplitButton.Enabled.Text"] = "Antialiasing Enabled";
            resDic["AntiAliasingSplitButton.Disabled.Text"] = "Antialiasing Disabled";
            resDic["ToolsControl.ToolToolTip.Format"] = "{0}Shortcut key: {1}";
            resDic["ToolConfigStrip.PenSizeIncButton.ToolTipText"] = "Increase brush size Shortcut key: ] (hold Ctrl to increase by 5)";
            resDic["ToolConfigStrip.PenSizeDecButton.ToolTipText"] = "Decrease brush size Shortcut key: [ (hold Ctrl to decrease by 5)";
            resDic["ToolConfigStrip.PenStartCapSplitButton.ToolTipText"] = "Toggle start cap for line style Shortcut key: ,";
            resDic["ToolConfigStrip.PenDashStyleSplitButton.ToolTipText"] = "Toggle dash type for line style Shortcut key: .";
            resDic["ToolConfigStrip.PenEndCapSplitButton.ToolTipText"] = "Toggle end cap for line style Shortcut key: /";
            resDic["ToolConfigStrip.PenStyleLabel.Text"] = "Style:";
            resDic["Effects.Render.Submenu.Name"] = "Render";
            resDic["Effects.Photo.Submenu.Name"] = "Photo";
            resDic["Effects.Noise.Submenu.Name"] = "Noise";
            resDic["Effects.Artistic.Submenu.Name"] = "Artistic";
            resDic["Effects.Stylize.Submenu.Name"] = "Stylize";
            resDic["MandelbrotFractalEffect.Name"] = "Mandelbrot Fractal";
            resDic["MandelbrotFractalEffect.ConfigDialog.Factor.DisplayName"] = "Factor";
            resDic["MandelbrotFractalEffect.ConfigDialog.Quality.DisplayName"] = "Quality";
            resDic["MandelbrotFractalEffect.ConfigDialog.Zoom.DisplayName"] = "Zoom";
            resDic["MandelbrotFractalEffect.ConfigDialog.Angle.DisplayName"] = "Angle";
            resDic["MandelbrotFractalEffect.ConfigDialog.Offset.DisplayName"] = "Offset";
            resDic["MandelbrotFractalEffect.ConfigDialog.InvertColors.Description"] = "Invert Colors";
            resDic["JuliaFractalEffect.Name"] = "Julia Fractal";
            resDic["JuliaFractalEffect.ConfigDialog.Factor.DisplayName"] = "Factor";
            resDic["JuliaFractalEffect.ConfigDialog.Angle.DisplayName"] = "Angle";
            resDic["JuliaFractalEffect.ConfigDialog.Quality.DisplayName"] = "Quality";
            resDic["JuliaFractalEffect.ConfigDialog.Zoom.DisplayName"] = "Zoom";
            resDic["CloudsEffect.Name"] = "Clouds";
            resDic["CloudsEffect.ConfigDialog.UsageLabel"] = "To change the color that the clouds are drawn in, you can set the primary and secondary colors in the Colors window.";
            resDic["CloudsEffect.ConfigDialog.ScaleLabel"] = "Scale";
            resDic["CloudsEffect.ConfigDialog.RoughnessLabel"] = "Roughness";
            resDic["CloudsEffect.ConfigDialog.SeedHeader.Text"] = "Random Noise";
            resDic["CloudsEffect.ConfigDialog.BlendModeHeader.Text"] = "Blend Mode";
            resDic["CloudsEffect.ConfigDialog.ReseedButton.Text"] = "&Reseed";
            resDic["ExpandCanvasQuestion.Title"] = "Paste";
            resDic["ExpandCanvasQuestion.IntroText"] = "The image being pasted is larger than the canvas size. What do you want to do?";
            resDic["ExpandCanvasQuestion.YesTB.ActionText"] = "&Expand canvas";
            resDic["ExpandCanvasQuestion.YesTB.ExplanationText"] = "Automatically expands the canvas to fit the image being pasted.";
            resDic["ExpandCanvasQuestion.NoTB.ActionText"] = "&Keep canvas size";
            resDic["ExpandCanvasQuestion.NoTB.ExplanationText"] = "Does not expand the canvas. You will have to move the pasted image around to make sure that the part you want is within the canvas boundaries.";
            resDic["ExpandCanvasQuestion.CancelTB.ActionText"] = "Cancel";
            resDic["ExpandCanvasQuestion.CancelTB.ExplanationText"] = "Cancels the paste action.";
            resDic["LineCap2.Flat"] = "Flat";
            resDic["LineCap2.Arrow"] = "Arrow";
            resDic["LineCap2.ArrowFilled"] = "Filled Arrow";
            resDic["LineCap2.Rounded"] = "Rounded";
            resDic["DashStyle.Custom"] = "Custom_NotUsed";
            resDic["DashStyle.Solid"] = "Solid";
            resDic["DashStyle.Dash"] = "Dashes";
            resDic["DashStyle.Dot"] = "Dotted";
            resDic["DashStyle.DashDot"] = "Dash, Dot";
            resDic["DashStyle.DashDotDot"] = "Dash, Dot, Dot";
            resDic["HelpFile.Url.Format"] = "{0}/doc/latest/index.html";
            resDic["DocumentWorkspace.ShowFileDialog.TransferProgress.Title"] = "Transferring ...";
            resDic["DocumentWorkspace.ShowFileDialog.ItemText.Initializing"] = "Initializing ...";
            resDic["DocumentWorkspace.ShowFileDialog.ItemText.Canceling"] = "Canceling ...";
            resDic["DocumentWorkspace.ShowFileDialog.ProgressText.Format"] = "{0} of {1}";
            resDic["DocumentWorkspace.ShowFileDialog.ItemFailureDialog.Title"] = "Transfer Error";
            resDic["DocumentWorkspace.ShowFileDialog.ItemFailureDialog.IntroText.Format"] = "There was an error transferring the image: {0}";
            resDic["DocumentWorkspace.ShowFileDialog.RetryTB.ActionText"] = "&Retry";
            resDic["DocumentWorkspace.ShowFileDialog.RetryTB.ExplanationText"] = "Retries transferring the image.";
            resDic["DocumentWorkspace.ShowFileDialog.SkipTB.ActionText"] = "&Skip";
            resDic["DocumentWorkspace.ShowFileDialog.SkipTB.ExplanationText"] = "Skips this image, and moves on to the next one.";
            resDic["DocumentWorkspace.ShowFileDialog.CancelTB.ActionText"] = "Cancel";
            resDic["DocumentWorkspace.ShowFileDialog.CancelTB.ExplanationText"] = "Cancels the transfer, and lets you reselect which images to open.";
            resDic["SaveAs.OverwriteConfirmation.Title"] = "Confirm Save As";
            resDic["SaveAs.OverwriteConfirmation.Text.Format"] = "{0} already exists.Do you want to replace it?";
            resDic["InkSketchEffect.Name"] = "Ink Sketch";
            resDic["InkSketchEffect.ConfigDialog.InkOutlineLabel"] = "Ink Outline";
            resDic["InkSketchEffect.ConfigDialog.ColoringLabel"] = "Coloring";
            resDic["SoftenPortraitEffect.Name"] = "Soften Portrait";
            resDic["SoftenPortraitEffect.ConfigDialog.SoftnessLabel"] = "Softness";
            resDic["SoftenPortraitEffect.ConfigDialog.LightingLabel"] = "Lighting";
            resDic["SoftenPortraitEffect.ConfigDialog.WarmthLabel"] = "Warmth";
            resDic["DdsFileType.Name"] = "DirectDraw Surface (DDS)";
            resDic["DdsFileType.SaveConfigWidget.RangeFit.Text"] = "Range fit (Fast/LQ)";
            resDic["DdsFileType.SaveConfigWidget.ClusterFit.Text"] = "Cluster fit (Slow/HQ)";
            resDic["DdsFileType.SaveConfigWidget.IterativeFit.Text"] = "Iterative fit (Slowest/HQ)";
            resDic["DdsFileType.SaveConfigWidget.Uniform.Text"] = "Uniform";
            resDic["DdsFileType.SaveConfigWidget.Perceptual.Text"] = "Perceptual";
            resDic["DdsFileType.SaveConfigWidget.GenerateMipMaps.Text"] = "Generate Mip Maps";
            resDic["DdsFileType.SaveConfigWidget.WeightColourByAlpha"] = "Weight Color By Alpha";
            resDic["DdsFileType.SaveConfigWidget.FileFormatList.DXT1"] = "DXT1 (Opaque/1-bit Alpha)";
            resDic["DdsFileType.SaveConfigWidget.FileFormatList.DXT3"] = "DXT3 (Explicit Alpha)";
            resDic["DdsFileType.SaveConfigWidget.FileFormatList.DXT5"] = "DXT5 (Interpolated Alpha)";
            resDic["DdsFileType.SaveConfigWidget.FileFormatList.A8R8G8B8"] = "A8R8G8B8";
            resDic["DdsFileType.SaveConfigWidget.FileFormatList.X8R8G8B8"] = "X8R8G8B8";
            resDic["DdsFileType.SaveConfigWidget.FileFormatList.A8B8G8R8"] = "A8B8G8R8";
            resDic["DdsFileType.SaveConfigWidget.FileFormatList.X8B8G8R8"] = "X8B8G8R8";
            resDic["DdsFileType.SaveConfigWidget.FileFormatList.A1R5G5B5"] = "A1R5G5B5";
            resDic["DdsFileType.SaveConfigWidget.FileFormatList.A4R4G4B4"] = "A4R4G4B4";
            resDic["DdsFileType.SaveConfigWidget.FileFormatList.R8G8B8"] = "R8G8B8";
            resDic["DdsFileType.SaveConfigWidget.FileFormatList.R5G6B5"] = "R5G6B5";
            resDic["DdsFileType.SaveConfigWidget.CompressorTypeLabel.Text"] = "Compressor Type";
            resDic["DdsFileType.SaveConfigWidget.ErrorMetricLabel.Text"] = "Error Metric";
            resDic["DdsFileType.SaveConfigWidget.AdditionalOptions.Text"] = "Additional Options";
            resDic["ToolConfigStrip.SelectionCombineModeLabel.Text"] = "Selection Mode:";
            resDic["ToolConfigStrip.SelectionCombineModeSplitButton.Replace.Text"] = "Replace";
            resDic["ToolConfigStrip.SelectionCombineModeSplitButton.Union.Text"] = "Add (union)";
            resDic["ToolConfigStrip.SelectionCombineModeSplitButton.Exclude.Text"] = "Subtract";
            resDic["ToolConfigStrip.SelectionCombineModeSplitButton.Xor.Text"] = @"Invert (""xor"")";
            resDic["ToolConfigStrip.SelectionCombineModeSplitButton.Intersect.Text"] = "Intersect";
            resDic["ToolConfigStrip.FloodModeLabel.Text"] = "Flood Mode:";
            resDic["ToolConfigStrip.FloodModeSplitButton.Local.Text"] = "Contiguous";
            resDic["ToolConfigStrip.FloodModeSplitButton.Global.Text"] = "Global";
            resDic["ToolConfigStrip.SelectionDrawModeLabel.Text"] = "Draw mode:";
            resDic["ToolConfigStrip.SelectionDrawModeWidthLabel.Text"] = "Width:";
            resDic["ToolConfigStrip.SelectionDrawModeHeightLabel.Text"] = "Height:";
            resDic["ToolConfigStrip.SelectionDrawModeSplitButton.Normal.Text"] = "Normal";
            resDic["ToolConfigStrip.SelectionDrawModeSplitButton.FixedRatio.Text"] = "Fixed Ratio";
            resDic["ToolConfigStrip.SelectionDrawModeSplitButton.FixedSize.Text"] = "Fixed Size";
            resDic["Effect.PluginErrorDialog.Title"] = "Plugin Error";
            resDic["Effect.PluginErrorDialog.IntroText"] = "This plugin has encountered an error, and must be closed. \r\nBecause of the unpredictable nature of these types of errors, it is strongly recommended that you restart Paint.NET before proceeding. Otherwise, there could be further stability problems or data corruption.";
            resDic["Effect.PluginErrorDialog.RestartTB.ActionText"] = "Restart Paint.NET (recommended)";
            resDic["Effect.PluginErrorDialog.RestartTB.ExplanationText"] = "Closes the plugin, and then closes your opened images and restarts Paint.NET. You will be asked to save changes if necessary.";
            resDic["Effect.PluginErrorDialog.DoNotRestartTB.ActionText"] = "Do not restart Paint.NET (not recommended)";
            resDic["Effect.PluginErrorDialog.DoNotRestartTB.ExplanationText"] = "Closes the plugin, but does not close or restart Paint.NET.";
            resDic["Effect.PluginErrorDialog.AuxButton1.Text"] = "Error Details...";
            resDic["BlockedPluginException.UnstablePlugin"] = "This plugin is known to cause stability problems, and has been blocked from loading.";
            resDic["BlockedPluginException.PluginIsNowBuiltIn"] = "This plugin is now built-in to Paint.NET.";
        }
        public string GetString(string str)
        {
            //if (str == "UpdatesDialog.BetaWarningLabel.Text" ||
            //    str == "SetupWizard.IntroPage.ExpirationWarning.Format" ||
            //    str == "UpdatesDialog.BetaWarningLabel.Text" ||
            //    str == "ControlShadow.BetaTag.Text.Format")
            //{

            //}
            string found;
            resDic.TryGetValue(str, out found);
            return found;
        }
    }
}